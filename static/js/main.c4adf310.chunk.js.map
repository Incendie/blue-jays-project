{"version":3,"sources":["Reducers/fetchReducer.ts","Reducers/filterReducer.ts","Reducers/index.ts","store.ts","Components/Teams/Teams.tsx","Actions/fetchActions.ts","Components/Main.tsx","Actions/filterActions.ts","Components/Teams/RosterStats.tsx","Components/Players/Player.tsx","Components/Teams/Roster.tsx","Components/Teams/Team.tsx","Components/Players/Splits.tsx","Components/Players/PlayerStats.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["initialState","fetching","fetched","payload","roster","player","fetchReducer","state","arguments","length","undefined","action","type","_objectSpread","filtered","filterReducer","filterReducer_objectSpread","reducer","combineReducers","fetch","middleware","applyMiddleware","promise","thunk","logger","createStore","Teams","connect","require","store","this","props","dispatch","method","then","response","json","catch","err","teamNames","toFilter","teams","map","team","name","toLowerCase","includes","target","orderStyle","order","league","id","toString","division","react_default","a","createElement","className","replace","key","style","react_router_dom","to","src","alt","React","Component","Main","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","search","onSubmit","bind","assertThisInitialized","onChange","e","setState","value","preventDefault","Teams_Teams","RosterStats","person","stats","stat","splits","split","playerType","season","wins","losses","winPercentage","era","gamesPitched","gamesStarted","numberOfPitches","inningsPitched","pitchesPerInning","strikePercentage","hits","runs","earnedRuns","homeRuns","groundOuts","airOuts","strikeOuts","baseOnBalls","strikeoutWalkRatio","wildPitches","battersFaced","saveOpportunities","saves","holds","pickoffs","whip","strikeoutsPer9Inn","walksPer9Inn","hitsPer9Inn","runsScoredPer9","homeRunsPer9","gamesPlayed","plateAppearances","atBats","doubles","triples","rbi","stolenBases","caughtStealing","avg","babip","obp","slg","groundIntoDoublePlay","sacBunts","sacFlies","Player","fullName","currentAge","birthDate","birthCity","birthStateProvince","birthCountry","height","weight","primaryPosition","abbreviation","draftYear","batSide","description","code","pitchHand","console","log","show","onClick","close","primaryNumber","Roster","focusPlayer","closeOnClick","teamid","currentTarget","checked","document","getElementById","_this2","pitchers","batters","position","push","pitcher","parentTeamId","jerseyNumber","htmlFor","firstName","lastName","Teams_RosterStats","batter","Players_Player","Team","match","params","teamData","venue","Teams_Roster","Splits","statType","games","innings","chances","putOuts","asssists","errors","doublePlays","fielding","rangeFactorPerGame","PlayerStats","playerid","hitting","pitching","people","details","group","displayName","Players_Splits","App","es","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c4adf310.chunk.js","sourcesContent":["const initialState = {\r\n    fetching: false,\r\n    fetched: false,\r\n    payload: [],\r\n    roster: [],\r\n    player: []\r\n  },\r\n  fetchReducer = (state = initialState, action: any) => {\r\n    switch (action.type) {\r\n      case \"FETCH_TEAMS_FULFILLED\":\r\n        return {\r\n          ...state,\r\n          fetched: true,\r\n          fetching: false,\r\n          payload: action.payload\r\n        };\r\n      case \"FETCH_TEAMS_PENDING\":\r\n        return { ...state, fetched: false, fetching: true };\r\n      case \"FETCH_SELECTED_TEAM_FULFILLED\":\r\n        return {\r\n          ...state,\r\n          fetched: true,\r\n          fetching: false,\r\n          payload: action.payload\r\n        };\r\n      case \"FETCH_SELECTED_TEAM_PENDING\":\r\n        return { ...state, fetched: false, fetching: true };\r\n      case \"FETCH_SELECTED_TEAM_ROSTER_FULFILLED\":\r\n        return {\r\n          ...state,\r\n          fetched: true,\r\n          fetching: false,\r\n          roster: action.payload\r\n        };\r\n      case \"FETCH_SELECTED_TEAM_ROSTER_PENDING\":\r\n        return { ...state, fetched: false, fetching: true };\r\n      case \"FETCH_PLAYER_FULFILLED\":\r\n        return {\r\n          ...state,\r\n          fetched: true,\r\n          fetching: false,\r\n          player: action.payload\r\n        };\r\n      case \"FETCH_PLAYER_PENDING\":\r\n        return { ...state, fetched: false, fetching: true };\r\n      case \"FETCH_PLAYER_STATS_FULFILLED\":\r\n        return {\r\n          ...state,\r\n          fetched: true,\r\n          fetching: false,\r\n          player: action.payload\r\n        };\r\n      case \"FETCH_PLAYER_STATS_PENDING\":\r\n        return { ...state, fetched: false, fetching: true };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\nexport default fetchReducer;\r\n","interface stateTypes {\r\n  filtered: string;\r\n}\r\nconst initialState: stateTypes = {\r\n  filtered: ''\r\n};\r\nconst filterReducer = (state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case 'FILTER_SUBMITTED':\r\n      return { ...state, filtered: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default filterReducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport fetchReducer from './fetchReducer';\r\nimport filterReducer from './filterReducer';\r\n\r\nconst reducer = combineReducers({\r\n  fetch: fetchReducer,\r\n  filtered: filterReducer\r\n});\r\n\r\nexport type AppState = ReturnType<typeof reducer>;\r\nexport default reducer;\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport promise from \"redux-promise-middleware\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport reducer from \"./Reducers\";\r\n\r\nconst middleware = applyMiddleware(promise, thunk, logger);\r\n\r\nexport default createStore(reducer, middleware);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./styles/index.scss\";\r\n\r\nimport { fetchTeams } from \"../../Actions/fetchActions\";\r\n\r\nconst { connect } = require(\"react-redux\");\r\n@connect((store: any) => {\r\n  return {\r\n    fetch: store.fetch.payload,\r\n    filtered: store.filtered.filtered\r\n  };\r\n})\r\nexport default class Teams extends React.Component<any> {\r\n  componentDidMount() {\r\n    this.props.dispatch(fetchTeams());\r\n  }\r\n\r\n  public render() {\r\n    let teamNames,\r\n      toFilter = this.props.filtered;\r\n    if (this.props.fetch.teams) {\r\n      teamNames = this.props.fetch.teams.map((team: any) => {\r\n        if (\r\n          team.name.toLowerCase().includes(toFilter.target) ||\r\n          !toFilter.target\r\n        ) {\r\n          const orderStyle = {\r\n            order: team.league.id.toString() + team.division.id.toString()\r\n          };\r\n          return (\r\n            <li\r\n              className={\r\n                \"teamList__team \" +\r\n                team.division.name.toLowerCase().replace(/ /g, \"\")\r\n              }\r\n              key={team.id}\r\n              style={orderStyle}\r\n            >\r\n              <Link to={\"/team/\" + team.id}>\r\n                <div className=\"teamList__logo\">\r\n                  <img\r\n                    src={\r\n                      \"https://www.mlbstatic.com/team-logos/\" + team.id + \".svg\"\r\n                    }\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n              </Link>\r\n              <p className=\"teamList__name\">{team.name}</p>\r\n            </li>\r\n          );\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div id=\"teams\" className=\"wrapper\">\r\n        <ul>{teamNames ? teamNames : \"Loading Teams\"}</ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export function fetchTeams() {\r\n  return function(dispatch: any) {\r\n    fetch(\"https://statsapi.mlb.com/api/v1/teams?sportId=1\", {\r\n      method: \"GET\"\r\n    })\r\n      .then(response => {\r\n        dispatch({ type: \"FETCH_TEAMS\", payload: response.json() });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"FETCH_TEAMS\", payload: err });\r\n      });\r\n  };\r\n}\r\n\r\nexport function fetchTeam(teamid: number) {\r\n  return function(dispatch: any) {\r\n    fetch(\"https://statsapi.mlb.com/api/v1/teams/\" + teamid, {\r\n      method: \"GET\"\r\n    })\r\n      .then(response => {\r\n        dispatch({ type: \"FETCH_SELECTED_TEAM\", payload: response.json() });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"FETCH_SELECTED_TEAM\", payload: err });\r\n      });\r\n  };\r\n}\r\n\r\nexport function fetchRoster(teamid: number) {\r\n  return function(dispatch: any) {\r\n    fetch(\r\n      \"https://statsapi.mlb.com/api/v1/teams/\" +\r\n        teamid +\r\n        \"/roster/Active?hydrate=person(stats(type=season))\",\r\n      {\r\n        method: \"GET\"\r\n      }\r\n    )\r\n      .then(response => {\r\n        dispatch({\r\n          type: \"FETCH_SELECTED_TEAM_ROSTER\",\r\n          payload: response.json()\r\n        });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"FETCH_SELECTED_TEAM_ROSTER\", payload: err });\r\n      });\r\n  };\r\n}\r\n\r\nexport function fetchPlayer(playerid: number) {\r\n  return function(dispatch: any) {\r\n    fetch(\"https://statsapi.mlb.com/api/v1/people/\" + playerid, {\r\n      method: \"GET\"\r\n    })\r\n      .then(response => {\r\n        dispatch({\r\n          type: \"FETCH_PLAYER\",\r\n          payload: response.json()\r\n        });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"FETCH_PLAYER\", payload: err });\r\n      });\r\n  };\r\n}\r\n\r\nexport function fetchPlayerStats(playerid: number) {\r\n  return function(dispatch: any) {\r\n    fetch(\r\n      \"https://statsapi.mlb.com/api/v1/people/\" +\r\n        playerid +\r\n        \"?hydrate=stats(group=[hitting,pitching,fielding],type=[yearByYear])\",\r\n      {\r\n        method: \"GET\"\r\n      }\r\n    )\r\n      .then(response => {\r\n        dispatch({\r\n          type: \"FETCH_PLAYER_STATS\",\r\n          payload: response.json()\r\n        });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"FETCH_PLAYER_STATS\", payload: err });\r\n      });\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\n\r\nimport Teams from \"./Teams/Teams\";\r\n\r\nimport { filterSubmitted } from \"../Actions/filterActions\";\r\n\r\nconst { connect } = require(\"react-redux\");\r\n\r\ninterface Props {\r\n  [key: string]: any;\r\n}\r\n\r\ninterface State {\r\n  search: string;\r\n}\r\n\r\n@connect((store: any) => {\r\n  return { store };\r\n})\r\nexport default class Main extends React.Component<Props, State> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      search: \"\"\r\n    };\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  onChange(e: any) {\r\n    this.setState({ search: e.target.value });\r\n  }\r\n\r\n  onSubmit(e: any) {\r\n    e.preventDefault();\r\n    this.props.dispatch(filterSubmitted(this.state.search));\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <main>\r\n        <h1>Welcome!</h1>\r\n        <h3>Click on a team to see team information</h3>\r\n        {/* <form onSubmit={this.onSubmit} action=\"submit\">\r\n          <input type=\"text\" onChange={this.onChange} />\r\n          <button type=\"button\" onClick={this.onSubmit}>\r\n            Search\r\n          </button>\r\n        </form> */}\r\n        <div className=\"leagues\">\r\n          <div className=\"leagues__american\">American League</div>\r\n          <div className=\"leagues__national\">National League</div>\r\n        </div>\r\n        <div className=\"divisions\">\r\n          <div className=\"al__west\">AL West</div>\r\n          <div className=\"al__east\">AL East</div>\r\n          <div className=\"al__central\">AL Central</div>\r\n          <div className=\"nl__west\">NL West</div>\r\n          <div className=\"nl__east\">NL East</div>\r\n          <div className=\"nl__central\">NL Central</div>\r\n        </div>\r\n        <Teams />\r\n      </main>\r\n    );\r\n  }\r\n}\r\n","export function filterSubmitted(target: string) {\r\n  return {\r\n    type: 'FILTER_SUBMITTED',\r\n    payload: { target }\r\n  };\r\n}\r\n","import React from \"react\";\r\n\r\nconst RosterStats: React.FC<any> = (props: any) => {\r\n  const player = props.player,\r\n    stats = player.person.stats.map((stat: any) => {\r\n      return (\r\n        <ul className=\"player__stats\" key={\"stats__\" + player.id}>\r\n          {stat.splits.map((split: any) => {\r\n            if (split.team) {\r\n              if (props.playerType === \"pitcher\") {\r\n                return (\r\n                  <li key={split.season + \"__\" + split.team.id}>\r\n                    <ul className={split.season + \"stats player__stats--year\"}>\r\n                      <li className=\"year\">{split.season}</li>\r\n                      <li className=\"wins\">{split.stat.wins}</li>\r\n                      <li className=\"losses\">{split.stat.losses}</li>\r\n                      <li className=\"winPercentage\">\r\n                        {split.stat.winPercentage}\r\n                      </li>\r\n                      <li className=\"era\">{split.stat.era}</li>\r\n                      <li className=\"gamesPitched\">\r\n                        {split.stat.gamesPitched}\r\n                      </li>\r\n                      <li className=\"gamesStarted\">\r\n                        {split.stat.gamesStarted}\r\n                      </li>\r\n                      <li className=\"numberOfPitches\">\r\n                        {split.stat.numberOfPitches}\r\n                      </li>\r\n                      <li className=\"inningsPitched\">\r\n                        {split.stat.inningsPitched}\r\n                      </li>\r\n                      <li className=\"pitchesPerInning\">\r\n                        {split.stat.pitchesPerInning}\r\n                      </li>\r\n                      <li className=\"strikePercentage\">\r\n                        {split.stat.strikePercentage}\r\n                      </li>\r\n                      <li className=\"hits\">{split.stat.hits}</li>\r\n                      <li className=\"runs\">{split.stat.runs}</li>\r\n                      <li className=\"earnedRuns\">{split.stat.earnedRuns}</li>\r\n                      <li className=\"homeRuns\">{split.stat.homeRuns}</li>\r\n                      <li className=\"groundOuts\">{split.stat.groundOuts}</li>\r\n                      <li className=\"airOuts\">{split.stat.airOuts}</li>\r\n                      <li className=\"strikeOuts\">{split.stat.strikeOuts}</li>\r\n                      <li className=\"baseOnBalls\">{split.stat.baseOnBalls}</li>\r\n                      <li className=\"strikeoutWalkRatio\">\r\n                        {split.stat.strikeoutWalkRatio}\r\n                      </li>\r\n                      <li className=\"wildPitches\">{split.stat.wildPitches}</li>\r\n                      <li className=\"battersFaced\">\r\n                        {split.stat.battersFaced}\r\n                      </li>\r\n                      <li className=\"saveOpportunities\">\r\n                        {split.stat.saveOpportunities}\r\n                      </li>\r\n                      <li className=\"saves\">{split.stat.saves}</li>\r\n                      <li className=\"holds\">{split.stat.holds}</li>\r\n                      <li className=\"pickoffs\">{split.stat.pickoffs}</li>\r\n                      <li className=\"whip\">{split.stat.whip}</li>\r\n                      <li className=\"strikeoutsPer9Inn\">\r\n                        {split.stat.strikeoutsPer9Inn}\r\n                      </li>\r\n                      <li className=\"walksPer9Inn\">\r\n                        {split.stat.walksPer9Inn}\r\n                      </li>\r\n                      <li className=\"hitsPer9Inn\">{split.stat.hitsPer9Inn}</li>\r\n                      <li className=\"runsScoredPer9\">\r\n                        {split.stat.runsScoredPer9}\r\n                      </li>\r\n                      <li className=\"homeRunsPer9\">\r\n                        {split.stat.homeRunsPer9}\r\n                      </li>\r\n                    </ul>\r\n                  </li>\r\n                );\r\n              } else if (props.playerType === \"batter\") {\r\n                return (\r\n                  <li key={split.season + \"__\" + split.team.id}>\r\n                    <ul className={split.season + \"stats player__stats--year\"}>\r\n                      <li className=\"year\">{split.season}</li>\r\n                      <li className=\"gamesPlayed\">{split.stat.gamesPlayed}</li>\r\n                      <li className=\"plateAppearances\">\r\n                        {split.stat.plateAppearances}\r\n                      </li>\r\n                      <li className=\"atBats\">{split.stat.atBats}</li>\r\n                      <li className=\"runs\">{split.stat.runs}</li>\r\n                      <li className=\"hits\">{split.stat.hits}</li>\r\n                      <li className=\"doubles\">{split.stat.doubles}</li>\r\n                      <li className=\"triples\">{split.stat.triples}</li>\r\n                      <li className=\"homeRuns\">{split.stat.homeRuns}</li>\r\n                      <li className=\"rbi\">{split.stat.rbi}</li>\r\n                      <li className=\"stolenBases\">{split.stat.stolenBases}</li>\r\n                      <li className=\"caughtStealing\">\r\n                        {split.stat.caughtStealing}\r\n                      </li>\r\n                      <li className=\"stolenBasePercentage\">\r\n                        {split.stat.gamesPlayed}\r\n                      </li>\r\n                      <li className=\"baseOnBalls\">{split.stat.baseOnBalls}</li>\r\n                      <li className=\"strikeOuts\">{split.stat.strikeOuts}</li>\r\n                      <li className=\"airOuts\">{split.stat.airOuts}</li>\r\n                      <li className=\"groundOuts\">{split.stat.groundOuts}</li>\r\n                      <li className=\"avg\">{split.stat.avg}</li>\r\n                      <li className=\"babip\">{split.stat.babip}</li>\r\n                      <li className=\"obp\">{split.stat.obp}</li>\r\n                      <li className=\"slg\">{split.stat.slg}</li>\r\n                      <li className=\"groundIntoDoublePlay\">\r\n                        {split.stat.groundIntoDoublePlay}\r\n                      </li>\r\n                      <li className=\"sacBunts\">{split.stat.sacBunts}</li>\r\n                      <li className=\"sacFlies\">{split.stat.sacFlies}</li>\r\n                    </ul>\r\n                  </li>\r\n                );\r\n              } else {\r\n                return (\r\n                  <li key={split.season + \"__\" + split.team.id}>\r\n                    Fetching player stats ...\r\n                  </li>\r\n                );\r\n              }\r\n            } else {\r\n              return false;\r\n            }\r\n          })}\r\n        </ul>\r\n      );\r\n    });\r\n\r\n  return stats;\r\n};\r\n\r\nexport default RosterStats;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./styles.scss\";\r\n\r\nconst Player: React.FC<any> = (props: any) => {\r\n  const player = props.player.person\r\n    ? props.player.person\r\n    : {\r\n        fullName: \"\",\r\n        currentAge: 0,\r\n        birthDate: \"\",\r\n        birthCity: \"\",\r\n        birthStateProvince: \"\",\r\n        birthCountry: \"\",\r\n        height: \"\",\r\n        weight: 0,\r\n        primaryPosition: {\r\n          abbreviation: \"NA\",\r\n          name: \"\"\r\n        },\r\n        draftYear: \"\",\r\n        batSide: {\r\n          description: \"NA\",\r\n          code: \"NA\"\r\n        },\r\n        pitchHand: {\r\n          description: \"NA\"\r\n        },\r\n        id: 0\r\n      };\r\n  console.log({ player });\r\n  return (\r\n    <section className={\"playerBio \" + (props.show ? \"show\" : \"\")}>\r\n      <div className=\"close\" onClick={props.close}>\r\n        <span className=\"forwardSlash\"></span>\r\n        <span className=\"backslash\"></span>\r\n      </div>\r\n      <div className=\"player__photo\">\r\n        <img\r\n          src={\r\n            \"https://securea.mlb.com/mlb/images/players/head_shot/\" +\r\n            player.id +\r\n            \".jpg\"\r\n          }\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div className=\"player__info\">\r\n        <p>\r\n          #{player.primaryNumber} {player.fullName}\r\n        </p>\r\n        <p>{\"Age: \" + player.currentAge}</p>\r\n        <p>{\"Birth Date: \" + player.birthDate}</p>\r\n        <p>{\"Born: \" + player.birthCity + \", \" + player.birthStateProvince}</p>\r\n        <p>{\"Country: \" + player.birthCountry}</p>\r\n      </div>\r\n      <div className=\"player__bio\">\r\n        <p>{\"Height: \" + player.height + '\"'}</p>\r\n        <p>{\"Weight: \" + player.weight + \"lbs\"}</p>\r\n      </div>\r\n      <div className=\"player__baseballBio\">\r\n        <p>\r\n          {\"Position: \" +\r\n            player.primaryPosition.abbreviation +\r\n            \", \" +\r\n            player.primaryPosition.name}\r\n        </p>\r\n        <p>\r\n          {\"Drafted: \" + (player.draftYear ? player.draftYear : \"Not Drafted\")}\r\n        </p>\r\n        <p>{\"Bats: \" + player.batSide.description}</p>\r\n        <p>{\"Throws: \" + player.pitchHand.description}</p>\r\n      </div>\r\n      <Link to={\"/player/\" + player.id}>Go To Profile</Link>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import React from \"react\";\r\n\r\nimport { fetchRoster } from \"../../Actions/fetchActions\";\r\n\r\nimport RosterStats from \"./RosterStats\";\r\nimport Player from \"../Players/Player\";\r\n\r\nconst { connect } = require(\"react-redux\");\r\n@connect((store: any) => {\r\n  return {\r\n    roster: store.fetch.roster.roster\r\n  };\r\n})\r\nclass Roster extends React.Component<any, any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = { focusPlayer: {}, show: false };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.closeOnClick = this.closeOnClick.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(fetchRoster(this.props.teamid));\r\n  }\r\n\r\n  onChange(e: any, player: any) {\r\n    if (e.currentTarget.checked) {\r\n      this.setState({ focusPlayer: player, show: true });\r\n    }\r\n  }\r\n\r\n  closeOnClick(e: any) {\r\n    let checkedButton = document.getElementById(\r\n      this.state.focusPlayer.person.fullName.replace(/\\s/g, \"\") + \"Toggle\"\r\n    ) as HTMLInputElement;\r\n    this.setState({ show: false });\r\n    // checkedButton.checked = false;\r\n  }\r\n\r\n  render() {\r\n    let pitchers: any = [],\r\n      batters: any = [];\r\n    if (this.props.roster) {\r\n      this.props.roster.map((player: any) => {\r\n        if (player.position.type.toLowerCase() === \"pitcher\") {\r\n          pitchers.push(player);\r\n        } else {\r\n          batters.push(player);\r\n        }\r\n        return true;\r\n      });\r\n      return (\r\n        <section className=\"team__roster\">\r\n          <h2>Click on any player's name to see some more info</h2>\r\n          <h3 className=\"tableTitle__pitchers\">Pitchers</h3>\r\n          <ul className=\"pitcher__headings\">\r\n            <li className=\"year\">Year</li>\r\n            <li className=\"wins\">W</li>\r\n            <li className=\"losses\">L</li>\r\n            <li className=\"winPercentage\">W-L%</li>\r\n            <li className=\"era\">ERA</li>\r\n            <li className=\"gamesPitched\">GP</li>\r\n            <li className=\"gamesStarted\">GS</li>\r\n            <li className=\"numberOfPitches\">NP</li>\r\n            <li className=\"inningsPitched\">IP</li>\r\n            <li className=\"pitchesPerInning\">NP/IP</li>\r\n            <li className=\"strikePercentage\">PC-ST</li>\r\n            <li className=\"hits\">H</li>\r\n            <li className=\"runs\">R</li>\r\n            <li className=\"earnedRuns\">ER</li>\r\n            <li className=\"homeRuns\">HR</li>\r\n            <li className=\"groundOuts\">GO</li>\r\n            <li className=\"airOuts\">AO</li>\r\n            <li className=\"strikeOuts\">K</li>\r\n            <li className=\"baseOnBalls\">BB</li>\r\n            <li className=\"strikeoutWalkRatio\">K/BB</li>\r\n            <li className=\"wildPitches\">WP</li>\r\n            <li className=\"battersFaced\">BF</li>\r\n            <li className=\"saveOpportunities\">SVO</li>\r\n            <li className=\"saves\">SV</li>\r\n            <li className=\"holds\">HLD</li>\r\n            <li className=\"pickoffs\">PK</li>\r\n            <li className=\"whip\">WHIP</li>\r\n            <li className=\"strikeoutsPer9Inn\">K/9</li>\r\n            <li className=\"walksPer9Inn\">BB/9</li>\r\n            <li className=\"hitsPer9Inn\">H/9</li>\r\n            <li className=\"runsScoredPer9\">R/9</li>\r\n            <li className=\"homeRunsPer9\">HR/9</li>\r\n          </ul>\r\n          <ul className=\"pitchers\">\r\n            <form>\r\n              {pitchers.map((pitcher: any) => {\r\n                return (\r\n                  <li\r\n                    className=\"player\"\r\n                    key={pitcher.parentTeamId + \"_\" + pitcher.jerseyNumber}\r\n                  >\r\n                    <div className=\"player__name\">\r\n                      <p className=\"jersey\">{pitcher.jerseyNumber}</p>\r\n                      <label\r\n                        htmlFor={\r\n                          pitcher.person.firstName +\r\n                          pitcher.person.lastName +\r\n                          \"Toggle\"\r\n                        }\r\n                        className=\"name\"\r\n                      >\r\n                        {pitcher.person.fullName}\r\n                      </label>\r\n                      <input\r\n                        type=\"radio\"\r\n                        id={\r\n                          pitcher.person.firstName +\r\n                          pitcher.person.lastName +\r\n                          \"Toggle\"\r\n                        }\r\n                        name=\"player__name\"\r\n                        onChange={e => this.onChange(e, pitcher)}\r\n                      />\r\n                    </div>\r\n                    <RosterStats playerType=\"pitcher\" player={pitcher} />\r\n                  </li>\r\n                );\r\n              })}\r\n            </form>\r\n          </ul>\r\n          <h3 className=\"tableTitle__batters\">Batters</h3>\r\n          <ul className=\"batter__headings\">\r\n            <li className=\"year\">Year</li>\r\n            <li className=\"gamesPlayed\">GP</li>\r\n            <li className=\"plateAppearances\">PA</li>\r\n            <li className=\"atBats\">AB</li>\r\n            <li className=\"runs\">R</li>\r\n            <li className=\"hits\">H</li>\r\n            <li className=\"doubles\">2B</li>\r\n            <li className=\"triples\">3B</li>\r\n            <li className=\"homeRuns\">HR</li>\r\n            <li className=\"rbi\">RBI</li>\r\n            <li className=\"stolenBases\">SB</li>\r\n            <li className=\"caughtStealing\">CS</li>\r\n            <li className=\"stolenBasePercentage\">SB%</li>\r\n            <li className=\"baseOnBalls\">BB</li>\r\n            <li className=\"strikeOuts\">SO</li>\r\n            <li className=\"airOuts\">AO</li>\r\n            <li className=\"groundOuts\">GO</li>\r\n            <li className=\"avg\">BA</li>\r\n            <li className=\"babip\">BABIP</li>\r\n            <li className=\"obp\">OBP</li>\r\n            <li className=\"slg\">SLG</li>\r\n            <li className=\"groundIntoDoublePlay\">GIDP</li>\r\n            <li className=\"sacBunts\">SH</li>\r\n            <li className=\"sacFlies\">SF</li>\r\n          </ul>\r\n          <ul className=\"batters\">\r\n            {batters.map((batter: any) => {\r\n              return (\r\n                <li\r\n                  className=\"player\"\r\n                  key={batter.parentTeamId + \"_\" + batter.jerseyNumber}\r\n                >\r\n                  <div className=\"player__name\">\r\n                    <p className=\"jersey\">{batter.jerseyNumber}</p>\r\n                    <label\r\n                      htmlFor={\r\n                        batter.person.firstName +\r\n                        batter.person.lastName +\r\n                        \"Toggle\"\r\n                      }\r\n                      className=\"name\"\r\n                    >\r\n                      {batter.person.fullName}\r\n                    </label>\r\n                    <input\r\n                      type=\"radio\"\r\n                      id={\r\n                        batter.person.firstName +\r\n                        batter.person.lastName +\r\n                        \"Toggle\"\r\n                      }\r\n                      name=\"player__name\"\r\n                      onChange={e => this.onChange(e, batter)}\r\n                    />\r\n                  </div>\r\n                  <RosterStats playerType=\"batter\" player={batter} />\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n          <Player\r\n            player={this.state.focusPlayer}\r\n            show={this.state.show}\r\n            close={this.closeOnClick}\r\n          />\r\n        </section>\r\n      );\r\n    } else {\r\n      return <div>Fetching Roster Data...</div>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Roster;\r\n","import React from \"react\";\r\n\r\nimport { fetchTeam } from \"../../Actions/fetchActions\";\r\n\r\nimport Roster from \"./Roster\";\r\n\r\nconst { connect } = require(\"react-redux\");\r\n@connect((store: any) => {\r\n  return {\r\n    team: store.fetch.payload.teams\r\n  };\r\n})\r\nclass Team extends React.Component<any> {\r\n  componentDidMount() {\r\n    this.props.dispatch(fetchTeam(this.props.match.params.teamid));\r\n  }\r\n\r\n  render() {\r\n    if (this.props.team) {\r\n      const teamData = this.props.team[0];\r\n      return (\r\n        <section className=\"team\">\r\n          <div className=\"team__info\">\r\n            <h2 className=\"team__name\">{teamData.name}</h2>\r\n            <div className=\"team__logo\">\r\n              <img\r\n                src={\r\n                  \"https://www.mlbstatic.com/team-logos/\" +\r\n                  this.props.match.params.teamid +\r\n                  \".svg\"\r\n                }\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            <div className=\"team__park\">\r\n              <img\r\n                src={\r\n                  \"https://prod-gameday.mlbstatic.com/responsive-gameday-assets/1.2.0/images/fields/\" +\r\n                  teamData.venue.id +\r\n                  \".svg\"\r\n                }\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <Roster teamid={this.props.match.params.teamid} />\r\n        </section>\r\n      );\r\n    } else {\r\n      return <div>Fetching Team Info...</div>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Team;\r\n","import React from \"react\";\r\nimport \"../../styles/index.scss\";\r\n\r\nconst Splits: React.FC<any> = (props: any) => {\r\n  console.log(\"props\", props);\r\n  const stats = props.stats[0];\r\n  switch (props.statType) {\r\n    case \"hitting\":\r\n      return stats.splits.map((split: any) => {\r\n        return (\r\n          <ul\r\n            key={split.season + \"hitting\"}\r\n            className={split.season + \"stats player__stats--year\"}\r\n          >\r\n            <li className=\"year\">{split.season}</li>\r\n            <li className=\"gamesPlayed\">{split.stat.gamesPlayed}</li>\r\n            <li className=\"plateAppearances\">{split.stat.plateAppearances}</li>\r\n            <li className=\"atBats\">{split.stat.atBats}</li>\r\n            <li className=\"runs\">{split.stat.runs}</li>\r\n            <li className=\"hits\">{split.stat.hits}</li>\r\n            <li className=\"doubles\">{split.stat.doubles}</li>\r\n            <li className=\"triples\">{split.stat.triples}</li>\r\n            <li className=\"homeRuns\">{split.stat.homeRuns}</li>\r\n            <li className=\"rbi\">{split.stat.rbi}</li>\r\n            <li className=\"stolenBases\">{split.stat.stolenBases}</li>\r\n            <li className=\"caughtStealing\">{split.stat.caughtStealing}</li>\r\n            <li className=\"stolenBasePercentage\">{split.stat.gamesPlayed}</li>\r\n            <li className=\"baseOnBalls\">{split.stat.baseOnBalls}</li>\r\n            <li className=\"strikeOuts\">{split.stat.strikeOuts}</li>\r\n            <li className=\"airOuts\">{split.stat.airOuts}</li>\r\n            <li className=\"groundOuts\">{split.stat.groundOuts}</li>\r\n            <li className=\"avg\">{split.stat.avg}</li>\r\n            <li className=\"babip\">{split.stat.babip}</li>\r\n            <li className=\"obp\">{split.stat.obp}</li>\r\n            <li className=\"slg\">{split.stat.slg}</li>\r\n            <li className=\"groundIntoDoublePlay\">\r\n              {split.stat.groundIntoDoublePlay}\r\n            </li>\r\n            <li className=\"sacBunts\">{split.stat.sacBunts}</li>\r\n            <li className=\"sacFlies\">{split.stat.sacFlies}</li>\r\n          </ul>\r\n        );\r\n      });\r\n    case \"pitching\":\r\n      return stats.splits.map((split: any) => {\r\n        return (\r\n          <ul\r\n            key={split.season + \"pitching\"}\r\n            className={split.season + \"stats player__stats--year\"}\r\n          >\r\n            <li className=\"year\">{split.season}</li>\r\n            <li className=\"wins\">{split.stat.wins}</li>\r\n            <li className=\"losses\">{split.stat.losses}</li>\r\n            <li className=\"winPercentage\">{split.stat.winPercentage}</li>\r\n            <li className=\"era\">{split.stat.era}</li>\r\n            <li className=\"gamesPitched\">{split.stat.gamesPitched}</li>\r\n            <li className=\"gamesStarted\">{split.stat.gamesStarted}</li>\r\n            <li className=\"numberOfPitches\">{split.stat.numberOfPitches}</li>\r\n            <li className=\"inningsPitched\">{split.stat.inningsPitched}</li>\r\n            <li className=\"pitchesPerInning\">{split.stat.pitchesPerInning}</li>\r\n            <li className=\"strikePercentage\">{split.stat.strikePercentage}</li>\r\n            <li className=\"hits\">{split.stat.hits}</li>\r\n            <li className=\"runs\">{split.stat.runs}</li>\r\n            <li className=\"earnedRuns\">{split.stat.earnedRuns}</li>\r\n            <li className=\"homeRuns\">{split.stat.homeRuns}</li>\r\n            <li className=\"groundOuts\">{split.stat.groundOuts}</li>\r\n            <li className=\"airOuts\">{split.stat.airOuts}</li>\r\n            <li className=\"strikeOuts\">{split.stat.strikeOuts}</li>\r\n            <li className=\"baseOnBalls\">{split.stat.baseOnBalls}</li>\r\n            <li className=\"strikeoutWalkRatio\">\r\n              {split.stat.strikeoutWalkRatio}\r\n            </li>\r\n            <li className=\"wildPitches\">{split.stat.wildPitches}</li>\r\n            <li className=\"battersFaced\">{split.stat.battersFaced}</li>\r\n            <li className=\"saveOpportunities\">\r\n              {split.stat.saveOpportunities}\r\n            </li>\r\n            <li className=\"saves\">{split.stat.saves}</li>\r\n            <li className=\"holds\">{split.stat.holds}</li>\r\n            <li className=\"pickoffs\">{split.stat.pickoffs}</li>\r\n            <li className=\"whip\">{split.stat.whip}</li>\r\n            <li className=\"strikeoutsPer9Inn\">\r\n              {split.stat.strikeoutsPer9Inn}\r\n            </li>\r\n            <li className=\"walksPer9Inn\">{split.stat.walksPer9Inn}</li>\r\n            <li className=\"hitsPer9Inn\">{split.stat.hitsPer9Inn}</li>\r\n            <li className=\"runsScoredPer9\">{split.stat.runsScoredPer9}</li>\r\n            <li className=\"homeRunsPer9\">{split.stat.homeRunsPer9}</li>\r\n          </ul>\r\n        );\r\n      });\r\n    case \"fielding\":\r\n      return stats.splits.map((split: any) => {\r\n        return (\r\n          <ul\r\n            key={split.season + \"fielding\"}\r\n            className={split.season + \"stats player__stats--year\"}\r\n          >\r\n            <li className=\"year\">{split.season}</li>\r\n            <li className=\"games\">{split.stat.games}</li>\r\n            <li className=\"gamesStarted\">{split.stat.gamesStarted}</li>\r\n            <li className=\"innings\">{split.stat.innings}</li>\r\n            <li className=\"chances\">{split.stat.chances}</li>\r\n            <li className=\"putOuts\">{split.stat.putOuts}</li>\r\n            <li className=\"assists\">{split.stat.asssists}</li>\r\n            <li className=\"errors\">{split.stat.errors}</li>\r\n            <li className=\"doublePlays\">{split.stat.doublePlays}</li>\r\n            <li className=\"fielding\">{split.stat.fielding}</li>\r\n            <li className=\"rangeFactorPerGame\">\r\n              {split.stat.rangeFactorPerGame}\r\n            </li>\r\n          </ul>\r\n        );\r\n      });\r\n    default:\r\n      return <div>Fetching Statline ...</div>;\r\n  }\r\n};\r\n\r\nexport default Splits;\r\n","import React from \"react\";\r\nimport \"./details.scss\";\r\n\r\nimport { fetchPlayerStats } from \"../../Actions/fetchActions\";\r\n\r\nimport Splits from \"./Splits\";\r\nimport Player from \"./Player\";\r\n\r\nconst { connect } = require(\"react-redux\");\r\n@connect((store: any) => {\r\n  return {\r\n    player: store.fetch.player\r\n  };\r\n})\r\nclass PlayerStats extends React.Component<any, any> {\r\n  componentDidMount() {\r\n    this.props.dispatch(fetchPlayerStats(this.props.match.params.playerid));\r\n  }\r\n\r\n  render() {\r\n    let stats = {\r\n      hitting: [] as string[],\r\n      pitching: [] as string[],\r\n      fielding: [] as string[]\r\n    };\r\n\r\n    if (this.props.player.people) {\r\n      const player = this.props.player.people[0];\r\n      const details = { person: player };\r\n      player.stats.map((stat: any) => {\r\n        switch (stat.group.displayName) {\r\n          case \"hitting\":\r\n            stats.hitting.push(stat);\r\n            break;\r\n          case \"pitching\":\r\n            stats.pitching.push(stat);\r\n            break;\r\n          case \"fielding\":\r\n            stats.fielding.push(stat);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        return true;\r\n      });\r\n      return (\r\n        <div className=\"detail\">\r\n          <Player player={details} />\r\n          <ul>\r\n            {stats.hitting.length ? (\r\n              <li key={player.id + \"hitting\"}>\r\n                <h3>Hitting</h3>\r\n                <ul className=\"batter__headings\">\r\n                  <li className=\"year\">Year</li>\r\n                  <li className=\"gamesPlayed\">GP</li>\r\n                  <li className=\"plateAppearances\">PA</li>\r\n                  <li className=\"atBats\">AB</li>\r\n                  <li className=\"runs\">R</li>\r\n                  <li className=\"hits\">H</li>\r\n                  <li className=\"doubles\">2B</li>\r\n                  <li className=\"triples\">3B</li>\r\n                  <li className=\"homeRuns\">HR</li>\r\n                  <li className=\"rbi\">RBI</li>\r\n                  <li className=\"stolenBases\">SB</li>\r\n                  <li className=\"caughtStealing\">CS</li>\r\n                  <li className=\"stolenBasePercentage\">SB%</li>\r\n                  <li className=\"baseOnBalls\">BB</li>\r\n                  <li className=\"strikeOuts\">SO</li>\r\n                  <li className=\"airOuts\">AO</li>\r\n                  <li className=\"groundOuts\">GO</li>\r\n                  <li className=\"avg\">AVG</li>\r\n                  <li className=\"babip\">BABIP</li>\r\n                  <li className=\"obp\">OBP</li>\r\n                  <li className=\"slg\">SLG</li>\r\n                  <li className=\"groundIntoDoublePlay\">GIDP</li>\r\n                  <li className=\"sacBunts\">SH</li>\r\n                  <li className=\"sacFlies\">SF</li>\r\n                </ul>\r\n                <Splits statType=\"hitting\" stats={stats.hitting} />\r\n              </li>\r\n            ) : null}\r\n            {stats.pitching.length ? (\r\n              <li key={player.id + \"pitching\"}>\r\n                <h3>Pitching</h3>\r\n                <ul className=\"pitcher__headings\">\r\n                  <li className=\"year\">Year</li>\r\n                  <li className=\"wins\">W</li>\r\n                  <li className=\"losses\">L</li>\r\n                  <li className=\"winPercentage\">W-L%</li>\r\n                  <li className=\"era\">ERA</li>\r\n                  <li className=\"gamesPitched\">GP</li>\r\n                  <li className=\"gamesStarted\">GS</li>\r\n                  <li className=\"numberOfPitches\">NP</li>\r\n                  <li className=\"inningsPitched\">IP</li>\r\n                  <li className=\"pitchesPerInning\">NP/IP</li>\r\n                  <li className=\"strikePercentage\">PC-ST</li>\r\n                  <li className=\"hits\">H</li>\r\n                  <li className=\"runs\">R</li>\r\n                  <li className=\"earnedRuns\">ER</li>\r\n                  <li className=\"homeRuns\">HR</li>\r\n                  <li className=\"groundOuts\">GO</li>\r\n                  <li className=\"airOuts\">AO</li>\r\n                  <li className=\"strikeOuts\">K</li>\r\n                  <li className=\"baseOnBalls\">BB</li>\r\n                  <li className=\"strikeoutWalkRatio\">K/BB</li>\r\n                  <li className=\"wildPitches\">WP</li>\r\n                  <li className=\"battersFaced\">BF</li>\r\n                  <li className=\"saveOpportunities\">SVO</li>\r\n                  <li className=\"saves\">SV</li>\r\n                  <li className=\"holds\">HLD</li>\r\n                  <li className=\"pickoffs\">PK</li>\r\n                  <li className=\"whip\">WHIP</li>\r\n                  <li className=\"strikeoutsPer9Inn\">K/9</li>\r\n                  <li className=\"walksPer9Inn\">BB/9</li>\r\n                  <li className=\"hitsPer9Inn\">H/9</li>\r\n                  <li className=\"runsScoredPer9\">R/9</li>\r\n                  <li className=\"homeRunsPer9\">HR/9</li>\r\n                </ul>\r\n                <Splits statType=\"pitching\" stats={stats.pitching} />\r\n              </li>\r\n            ) : null}\r\n            {stats.fielding.length ? (\r\n              <li key={player.id + \"fielding\"}>\r\n                <h3>Fielding</h3>\r\n                <ul className=\"fielder__headings\">\r\n                  <li className=\"year\">Year</li>\r\n                  <li className=\"games\">G</li>\r\n                  <li className=\"gamesStarted\">GS</li>\r\n                  <li className=\"innings\">INN</li>\r\n                  <li className=\"chances\">OPP</li>\r\n                  <li className=\"putOuts\">PO</li>\r\n                  <li className=\"assists\">A</li>\r\n                  <li className=\"errors\">E</li>\r\n                  <li className=\"doublePlays\">DP</li>\r\n                  <li className=\"fielding\">FPCT</li>\r\n                  <li className=\"rangeFactorPerGame\">RF</li>\r\n                </ul>\r\n                <Splits statType=\"fielding\" stats={stats.fielding} />\r\n              </li>\r\n            ) : null}\r\n          </ul>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <div>Fetching Player's Statline ...</div>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default PlayerStats;\r\n","import React from \"react\";\r\nimport \"./styles/index.scss\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport \"./styles/index.scss\";\r\n\r\nimport Main from \"./Components/Main\";\r\nimport Team from \"./Components/Teams/Team\";\r\nimport PlayerStats from \"./Components/Players/PlayerStats\";\r\n\r\nconst App: React.FC<any> = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <div className=\"wrapper\">\r\n        <Router>\r\n          <Route exact path=\"/\" component={Main} />\r\n          <Route path=\"/team/:teamid\" component={Team} />\r\n          <Route path=\"/player/:playerid\" component={PlayerStats} />\r\n        </Router>\r\n      </div>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}