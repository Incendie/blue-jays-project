{"version":3,"sources":["Reducers/fetchReducer.ts","Reducers/filterReducer.ts","Reducers/index.ts","store.ts","Components/Main/Header.tsx","Components/Main/Footer.tsx","Components/Teams/Teams.tsx","Actions/fetchActions.ts","Components/Main/Main.tsx","Actions/filterActions.ts","Components/Teams/RosterStats.tsx","Components/Players/Player.tsx","Components/Teams/Roster.tsx","Components/Teams/Team.tsx","Components/Players/Splits.tsx","Components/Players/PlayerStats.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["initialState","fetching","fetched","payload","roster","player","fetchReducer","state","arguments","length","undefined","action","type","_objectSpread","filtered","filterReducer","filterReducer_objectSpread","reducer","combineReducers","fetch","middleware","applyMiddleware","promise","thunk","logger","createStore","Header","react_default","a","createElement","react_router_dom","to","className","src","alt","Footer","href","Teams","connect","require","store","this","props","dispatch","method","then","response","json","catch","err","teamNames","toFilter","teams","map","team","name","toLowerCase","includes","target","orderStyle","order","league","id","toString","division","replace","key","style","React","Component","Main","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","search","onSubmit","bind","assertThisInitialized","onChange","e","setState","value","preventDefault","Teams_Teams","RosterStats","person","stats","stat","splits","split","playerType","season","wins","losses","winPercentage","era","gamesPitched","gamesStarted","numberOfPitches","inningsPitched","pitchesPerInning","strikePercentage","hits","runs","earnedRuns","homeRuns","groundOuts","airOuts","strikeOuts","baseOnBalls","strikeoutWalkRatio","wildPitches","battersFaced","saveOpportunities","saves","holds","pickoffs","whip","strikeoutsPer9Inn","walksPer9Inn","hitsPer9Inn","runsScoredPer9","homeRunsPer9","gamesPlayed","plateAppearances","atBats","doubles","triples","rbi","stolenBases","caughtStealing","avg","babip","obp","slg","groundIntoDoublePlay","sacBunts","sacFlies","Player","fullName","currentAge","birthDate","birthCity","birthStateProvince","birthCountry","height","weight","primaryPosition","abbreviation","draftYear","batSide","description","code","pitchHand","show","onClick","close","primaryNumber","Roster","focusPlayer","closeOnClick","teamid","currentTarget","checked","_this2","pitchers","batters","position","push","pitcher","parentTeamId","jerseyNumber","htmlFor","firstName","lastName","Teams_RosterStats","batter","Players_Player","Team","match","params","teamData","venue","Teams_Roster","Splits","statType","games","innings","chances","putOuts","asssists","errors","doublePlays","fielding","rangeFactorPerGame","PlayerStats","playerid","hitting","pitching","people","details","group","displayName","Players_Splits","App","es","Main_Header","react_router","exact","path","component","Main_Footer","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b73655f1.chunk.js","sourcesContent":["const initialState = {\n    fetching: false,\n    fetched: false,\n    payload: [],\n    roster: [],\n    player: []\n  },\n  fetchReducer = (state = initialState, action: any) => {\n    switch (action.type) {\n      case \"FETCH_TEAMS_FULFILLED\":\n        return {\n          ...state,\n          fetched: true,\n          fetching: false,\n          payload: action.payload\n        };\n      case \"FETCH_TEAMS_PENDING\":\n        return { ...state, fetched: false, fetching: true };\n      case \"FETCH_SELECTED_TEAM_FULFILLED\":\n        return {\n          ...state,\n          fetched: true,\n          fetching: false,\n          payload: action.payload\n        };\n      case \"FETCH_SELECTED_TEAM_PENDING\":\n        return { ...state, fetched: false, fetching: true };\n      case \"FETCH_SELECTED_TEAM_ROSTER_FULFILLED\":\n        return {\n          ...state,\n          fetched: true,\n          fetching: false,\n          roster: action.payload\n        };\n      case \"FETCH_SELECTED_TEAM_ROSTER_PENDING\":\n        return { ...state, fetched: false, fetching: true };\n      case \"FETCH_PLAYER_FULFILLED\":\n        return {\n          ...state,\n          fetched: true,\n          fetching: false,\n          player: action.payload\n        };\n      case \"FETCH_PLAYER_PENDING\":\n        return { ...state, fetched: false, fetching: true };\n      case \"FETCH_PLAYER_STATS_FULFILLED\":\n        return {\n          ...state,\n          fetched: true,\n          fetching: false,\n          player: action.payload\n        };\n      case \"FETCH_PLAYER_STATS_PENDING\":\n        return { ...state, fetched: false, fetching: true };\n      default:\n        return state;\n    }\n  };\n\nexport default fetchReducer;\n","interface stateTypes {\n  filtered: string;\n}\nconst initialState: stateTypes = {\n  filtered: ''\n};\nconst filterReducer = (state = initialState, action: any) => {\n  switch (action.type) {\n    case 'FILTER_SUBMITTED':\n      return { ...state, filtered: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { combineReducers } from 'redux';\n\nimport fetchReducer from './fetchReducer';\nimport filterReducer from './filterReducer';\n\nconst reducer = combineReducers({\n  fetch: fetchReducer,\n  filtered: filterReducer\n});\n\nexport type AppState = ReturnType<typeof reducer>;\nexport default reducer;\n","import { applyMiddleware, createStore } from \"redux\";\nimport logger from \"redux-logger\";\nimport promise from \"redux-promise-middleware\";\nimport thunk from \"redux-thunk\";\n\nimport reducer from \"./Reducers\";\n\nconst middleware = applyMiddleware(promise, thunk, logger);\n\nexport default createStore(reducer, middleware);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./styles/styles.scss\";\n\nconst Header: React.FC<any> = () => {\n  return (\n    <header>\n      <Link to=\"/\">\n        <div className=\"icon\">\n          <div className=\"logo\">\n            <img\n              src=\"https://upload.wikimedia.org/wikipedia/sco/a/a6/Major_League_Baseball_logo.svg\"\n              alt=\"\"\n            />\n          </div>\n          <div className=\"appName\">MLB Stats Viewer</div>\n        </div>\n      </Link>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n// import { Link } from \"react-router-dom\";\n\nimport \"./styles/styles.scss\";\n\nconst Footer: React.FC<any> = () => {\n  return (\n    <footer>\n      <p>Created by:</p>\n      <a href=\"https://ansonli.io\"> Anson Li</a>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./styles/styles.scss\";\n\nimport { fetchTeams } from \"../../Actions/fetchActions\";\n\nconst { connect } = require(\"react-redux\");\n@connect((store: any) => {\n  return {\n    fetch: store.fetch.payload,\n    filtered: store.filtered.filtered\n  };\n})\nexport default class Teams extends React.Component<any> {\n  componentDidMount() {\n    this.props.dispatch(fetchTeams());\n  }\n\n  public render() {\n    let teamNames,\n      toFilter = this.props.filtered;\n    if (this.props.fetch.teams) {\n      teamNames = this.props.fetch.teams.map((team: any) => {\n        if (\n          team.name.toLowerCase().includes(toFilter.target) ||\n          !toFilter.target\n        ) {\n          const orderStyle = {\n            order: team.league.id.toString() + team.division.id.toString()\n          };\n          return (\n            <li\n              className={\n                \"teamList__team \" +\n                team.division.name.toLowerCase().replace(/ /g, \"\")\n              }\n              key={team.id}\n              style={orderStyle}\n            >\n              <Link to={\"/team/\" + team.id}>\n                <div className=\"teamList__logo\">\n                  <img\n                    src={\n                      \"https://www.mlbstatic.com/team-logos/\" + team.id + \".svg\"\n                    }\n                    alt=\"\"\n                  />\n                </div>\n                <p className=\"teamList__name\">{team.name}</p>\n              </Link>\n            </li>\n          );\n        } else {\n          return false;\n        }\n      });\n    }\n\n    return (\n      <div id=\"teams\" className=\"wrapper\">\n        <ul>{teamNames ? teamNames : \"Loading Teams\"}</ul>\n      </div>\n    );\n  }\n}\n","export function fetchTeams() {\n  return function(dispatch: any) {\n    fetch(\"https://statsapi.mlb.com/api/v1/teams?sportId=1\", {\n      method: \"GET\"\n    })\n      .then(response => {\n        dispatch({ type: \"FETCH_TEAMS\", payload: response.json() });\n      })\n      .catch(err => {\n        dispatch({ type: \"FETCH_TEAMS\", payload: err });\n      });\n  };\n}\n\nexport function fetchTeam(teamid: number) {\n  return function(dispatch: any) {\n    fetch(\"https://statsapi.mlb.com/api/v1/teams/\" + teamid, {\n      method: \"GET\"\n    })\n      .then(response => {\n        dispatch({ type: \"FETCH_SELECTED_TEAM\", payload: response.json() });\n      })\n      .catch(err => {\n        dispatch({ type: \"FETCH_SELECTED_TEAM\", payload: err });\n      });\n  };\n}\n\nexport function fetchRoster(teamid: number) {\n  return function(dispatch: any) {\n    fetch(\n      \"https://statsapi.mlb.com/api/v1/teams/\" +\n        teamid +\n        \"/roster/Active?hydrate=person(stats(type=season))\",\n      {\n        method: \"GET\"\n      }\n    )\n      .then(response => {\n        dispatch({\n          type: \"FETCH_SELECTED_TEAM_ROSTER\",\n          payload: response.json()\n        });\n      })\n      .catch(err => {\n        dispatch({ type: \"FETCH_SELECTED_TEAM_ROSTER\", payload: err });\n      });\n  };\n}\n\nexport function fetchPlayer(playerid: number) {\n  return function(dispatch: any) {\n    fetch(\"https://statsapi.mlb.com/api/v1/people/\" + playerid, {\n      method: \"GET\"\n    })\n      .then(response => {\n        dispatch({\n          type: \"FETCH_PLAYER\",\n          payload: response.json()\n        });\n      })\n      .catch(err => {\n        dispatch({ type: \"FETCH_PLAYER\", payload: err });\n      });\n  };\n}\n\nexport function fetchPlayerStats(playerid: number) {\n  return function(dispatch: any) {\n    fetch(\n      \"https://statsapi.mlb.com/api/v1/people/\" +\n        playerid +\n        \"?hydrate=stats(group=[hitting,pitching,fielding],type=[yearByYear])\",\n      {\n        method: \"GET\"\n      }\n    )\n      .then(response => {\n        dispatch({\n          type: \"FETCH_PLAYER_STATS\",\n          payload: response.json()\n        });\n      })\n      .catch(err => {\n        dispatch({ type: \"FETCH_PLAYER_STATS\", payload: err });\n      });\n  };\n}\n","import React from \"react\";\nimport \"./styles/styles.scss\";\n\nimport Teams from \"../Teams/Teams\";\n\nimport { filterSubmitted } from \"../../Actions/filterActions\";\n\nconst { connect } = require(\"react-redux\");\n\ninterface Props {\n  [key: string]: any;\n}\n\ninterface State {\n  search: string;\n}\n\n@connect((store: any) => {\n  return { store };\n})\nexport default class Main extends React.Component<Props, State> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      search: \"\"\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(e: any) {\n    this.setState({ search: e.target.value });\n  }\n\n  onSubmit(e: any) {\n    e.preventDefault();\n    this.props.dispatch(filterSubmitted(this.state.search));\n  }\n\n  public render() {\n    return (\n      <main>\n        <h1>Welcome!</h1>\n        <h3>Click on a team to see team information</h3>\n        {/* <form onSubmit={this.onSubmit} action=\"submit\">\n          <input type=\"text\" onChange={this.onChange} />\n          <button type=\"button\" onClick={this.onSubmit}>\n            Search\n          </button>\n        </form> */}\n        <div className=\"leagues\">\n          <div className=\"leagues__american\">American League</div>\n          <div className=\"leagues__national\">National League</div>\n        </div>\n        <div className=\"divisions\">\n          <div className=\"al__west\">AL West</div>\n          <div className=\"al__east\">AL East</div>\n          <div className=\"al__central\">AL Central</div>\n          <div className=\"nl__west\">NL West</div>\n          <div className=\"nl__east\">NL East</div>\n          <div className=\"nl__central\">NL Central</div>\n        </div>\n        <Teams />\n      </main>\n    );\n  }\n}\n","export function filterSubmitted(target: string) {\n  return {\n    type: 'FILTER_SUBMITTED',\n    payload: { target }\n  };\n}\n","import React from \"react\";\n\nconst RosterStats: React.FC<any> = (props: any) => {\n  const player = props.player,\n    stats = player.person.stats.map((stat: any) => {\n      return (\n        <ul className=\"player__stats\" key={\"stats__\" + player.id}>\n          {stat.splits.map((split: any) => {\n            if (split.team) {\n              if (props.playerType === \"pitcher\") {\n                return (\n                  <li key={split.season + \"__\" + split.team.id}>\n                    <ul className={split.season + \"stats player__stats--year\"}>\n                      <li className=\"year\">{split.season}</li>\n                      <li className=\"wins\">{split.stat.wins}</li>\n                      <li className=\"losses\">{split.stat.losses}</li>\n                      <li className=\"winPercentage\">\n                        {split.stat.winPercentage}\n                      </li>\n                      <li className=\"era\">{split.stat.era}</li>\n                      <li className=\"gamesPitched\">\n                        {split.stat.gamesPitched}\n                      </li>\n                      <li className=\"gamesStarted\">\n                        {split.stat.gamesStarted}\n                      </li>\n                      <li className=\"numberOfPitches\">\n                        {split.stat.numberOfPitches}\n                      </li>\n                      <li className=\"inningsPitched\">\n                        {split.stat.inningsPitched}\n                      </li>\n                      <li className=\"pitchesPerInning\">\n                        {split.stat.pitchesPerInning}\n                      </li>\n                      <li className=\"strikePercentage\">\n                        {split.stat.strikePercentage}\n                      </li>\n                      <li className=\"hits\">{split.stat.hits}</li>\n                      <li className=\"runs\">{split.stat.runs}</li>\n                      <li className=\"earnedRuns\">{split.stat.earnedRuns}</li>\n                      <li className=\"homeRuns\">{split.stat.homeRuns}</li>\n                      <li className=\"groundOuts\">{split.stat.groundOuts}</li>\n                      <li className=\"airOuts\">{split.stat.airOuts}</li>\n                      <li className=\"strikeOuts\">{split.stat.strikeOuts}</li>\n                      <li className=\"baseOnBalls\">{split.stat.baseOnBalls}</li>\n                      <li className=\"strikeoutWalkRatio\">\n                        {split.stat.strikeoutWalkRatio}\n                      </li>\n                      <li className=\"wildPitches\">{split.stat.wildPitches}</li>\n                      <li className=\"battersFaced\">\n                        {split.stat.battersFaced}\n                      </li>\n                      <li className=\"saveOpportunities\">\n                        {split.stat.saveOpportunities}\n                      </li>\n                      <li className=\"saves\">{split.stat.saves}</li>\n                      <li className=\"holds\">{split.stat.holds}</li>\n                      <li className=\"pickoffs\">{split.stat.pickoffs}</li>\n                      <li className=\"whip\">{split.stat.whip}</li>\n                      <li className=\"strikeoutsPer9Inn\">\n                        {split.stat.strikeoutsPer9Inn}\n                      </li>\n                      <li className=\"walksPer9Inn\">\n                        {split.stat.walksPer9Inn}\n                      </li>\n                      <li className=\"hitsPer9Inn\">{split.stat.hitsPer9Inn}</li>\n                      <li className=\"runsScoredPer9\">\n                        {split.stat.runsScoredPer9}\n                      </li>\n                      <li className=\"homeRunsPer9\">\n                        {split.stat.homeRunsPer9}\n                      </li>\n                    </ul>\n                  </li>\n                );\n              } else if (props.playerType === \"batter\") {\n                return (\n                  <li key={split.season + \"__\" + split.team.id}>\n                    <ul className={split.season + \"stats player__stats--year\"}>\n                      <li className=\"year\">{split.season}</li>\n                      <li className=\"gamesPlayed\">{split.stat.gamesPlayed}</li>\n                      <li className=\"plateAppearances\">\n                        {split.stat.plateAppearances}\n                      </li>\n                      <li className=\"atBats\">{split.stat.atBats}</li>\n                      <li className=\"runs\">{split.stat.runs}</li>\n                      <li className=\"hits\">{split.stat.hits}</li>\n                      <li className=\"doubles\">{split.stat.doubles}</li>\n                      <li className=\"triples\">{split.stat.triples}</li>\n                      <li className=\"homeRuns\">{split.stat.homeRuns}</li>\n                      <li className=\"rbi\">{split.stat.rbi}</li>\n                      <li className=\"stolenBases\">{split.stat.stolenBases}</li>\n                      <li className=\"caughtStealing\">\n                        {split.stat.caughtStealing}\n                      </li>\n                      <li className=\"stolenBasePercentage\">\n                        {split.stat.gamesPlayed}\n                      </li>\n                      <li className=\"baseOnBalls\">{split.stat.baseOnBalls}</li>\n                      <li className=\"strikeOuts\">{split.stat.strikeOuts}</li>\n                      <li className=\"airOuts\">{split.stat.airOuts}</li>\n                      <li className=\"groundOuts\">{split.stat.groundOuts}</li>\n                      <li className=\"avg\">{split.stat.avg}</li>\n                      <li className=\"babip\">{split.stat.babip}</li>\n                      <li className=\"obp\">{split.stat.obp}</li>\n                      <li className=\"slg\">{split.stat.slg}</li>\n                      <li className=\"groundIntoDoublePlay\">\n                        {split.stat.groundIntoDoublePlay}\n                      </li>\n                      <li className=\"sacBunts\">{split.stat.sacBunts}</li>\n                      <li className=\"sacFlies\">{split.stat.sacFlies}</li>\n                    </ul>\n                  </li>\n                );\n              } else {\n                return (\n                  <li key={split.season + \"__\" + split.team.id}>\n                    Fetching player stats ...\n                  </li>\n                );\n              }\n            } else {\n              return false;\n            }\n          })}\n        </ul>\n      );\n    });\n\n  return stats;\n};\n\nexport default RosterStats;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./styles/styles.scss\";\n\nconst Player: React.FC<any> = (props: any) => {\n  const player = props.player.person\n    ? props.player.person\n    : {\n        fullName: \"\",\n        currentAge: 0,\n        birthDate: \"\",\n        birthCity: \"\",\n        birthStateProvince: \"\",\n        birthCountry: \"\",\n        height: \"\",\n        weight: 0,\n        primaryPosition: {\n          abbreviation: \"NA\",\n          name: \"\"\n        },\n        draftYear: \"\",\n        batSide: {\n          description: \"NA\",\n          code: \"NA\"\n        },\n        pitchHand: {\n          description: \"NA\"\n        },\n        id: 0\n      };\n\n  return (\n    <section className={\"playerBio \" + (props.show ? \"show\" : \"\")}>\n      <div className=\"close\" onClick={props.close}>\n        <span className=\"forwardSlash\"></span>\n        <span className=\"backslash\"></span>\n      </div>\n      <div className=\"player__photo\">\n        <img\n          src={\n            \"https://securea.mlb.com/mlb/images/players/head_shot/\" +\n            player.id +\n            \".jpg\"\n          }\n          alt=\"\"\n        />\n      </div>\n      <div className=\"player__info\">\n        <p>\n          #{player.primaryNumber} {player.fullName}\n        </p>\n        <p>{\"Age: \" + player.currentAge}</p>\n        <p>{\"Birth Date: \" + player.birthDate}</p>\n        <p>{\"Born: \" + player.birthCity + \", \" + player.birthStateProvince}</p>\n        <p>{\"Country: \" + player.birthCountry}</p>\n      </div>\n      <div className=\"player__bio\">\n        <p>{\"Height: \" + player.height + '\"'}</p>\n        <p>{\"Weight: \" + player.weight + \"lbs\"}</p>\n      </div>\n      <div className=\"player__baseballBio\">\n        <p>\n          {\"Position: \" +\n            player.primaryPosition.abbreviation +\n            \", \" +\n            player.primaryPosition.name}\n        </p>\n        <p>\n          {\"Drafted: \" + (player.draftYear ? player.draftYear : \"Not Drafted\")}\n        </p>\n        <p>{\"Bats: \" + player.batSide.description}</p>\n        <p>{\"Throws: \" + player.pitchHand.description}</p>\n      </div>\n      <Link to={\"/player/\" + player.id}>Go To Profile</Link>\n    </section>\n  );\n};\n\nexport default Player;\n","import React from \"react\";\n\nimport { fetchRoster } from \"../../Actions/fetchActions\";\n\nimport RosterStats from \"./RosterStats\";\nimport Player from \"../Players/Player\";\n\nconst { connect } = require(\"react-redux\");\n@connect((store: any) => {\n  return {\n    roster: store.fetch.roster.roster\n  };\n})\nclass Roster extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = { focusPlayer: {}, show: false };\n\n    this.onChange = this.onChange.bind(this);\n    this.closeOnClick = this.closeOnClick.bind(this);\n  }\n  componentDidMount() {\n    this.props.dispatch(fetchRoster(this.props.teamid));\n  }\n\n  onChange(e: any, player: any) {\n    if (e.currentTarget.checked) {\n      this.setState({ focusPlayer: player, show: true });\n    }\n  }\n\n  closeOnClick(e: any) {\n    // let checkedButton = document.getElementById(\n    //   this.state.focusPlayer.person.fullName.replace(/\\s/g, \"\") + \"Toggle\"\n    // ) as HTMLInputElement;\n    this.setState({ show: false });\n    // checkedButton.checked = false;\n  }\n\n  render() {\n    let pitchers: any = [],\n      batters: any = [];\n    if (this.props.roster) {\n      this.props.roster.map((player: any) => {\n        if (player.position.type.toLowerCase() === \"pitcher\") {\n          pitchers.push(player);\n        } else {\n          batters.push(player);\n        }\n        return true;\n      });\n      return (\n        <section className=\"team__roster\">\n          <h2>Click on any player's name to see some more info</h2>\n          <h3 className=\"tableTitle__pitchers\">Pitchers</h3>\n          <ul className=\"pitcher__headings\">\n            <li className=\"year\">Year</li>\n            <li className=\"wins\">W</li>\n            <li className=\"losses\">L</li>\n            <li className=\"winPercentage\">W-L%</li>\n            <li className=\"era\">ERA</li>\n            <li className=\"gamesPitched\">GP</li>\n            <li className=\"gamesStarted\">GS</li>\n            <li className=\"numberOfPitches\">NP</li>\n            <li className=\"inningsPitched\">IP</li>\n            <li className=\"pitchesPerInning\">NP/IP</li>\n            <li className=\"strikePercentage\">PC-ST</li>\n            <li className=\"hits\">H</li>\n            <li className=\"runs\">R</li>\n            <li className=\"earnedRuns\">ER</li>\n            <li className=\"homeRuns\">HR</li>\n            <li className=\"groundOuts\">GO</li>\n            <li className=\"airOuts\">AO</li>\n            <li className=\"strikeOuts\">K</li>\n            <li className=\"baseOnBalls\">BB</li>\n            <li className=\"strikeoutWalkRatio\">K/BB</li>\n            <li className=\"wildPitches\">WP</li>\n            <li className=\"battersFaced\">BF</li>\n            <li className=\"saveOpportunities\">SVO</li>\n            <li className=\"saves\">SV</li>\n            <li className=\"holds\">HLD</li>\n            <li className=\"pickoffs\">PK</li>\n            <li className=\"whip\">WHIP</li>\n            <li className=\"strikeoutsPer9Inn\">K/9</li>\n            <li className=\"walksPer9Inn\">BB/9</li>\n            <li className=\"hitsPer9Inn\">H/9</li>\n            <li className=\"runsScoredPer9\">R/9</li>\n            <li className=\"homeRunsPer9\">HR/9</li>\n          </ul>\n          <ul className=\"pitchers\">\n            <form>\n              {pitchers.map((pitcher: any) => {\n                return (\n                  <li\n                    className=\"player\"\n                    key={pitcher.parentTeamId + \"_\" + pitcher.jerseyNumber}\n                  >\n                    <div className=\"player__name\">\n                      <p className=\"jersey\">{pitcher.jerseyNumber}</p>\n                      <label\n                        htmlFor={\n                          pitcher.person.firstName +\n                          pitcher.person.lastName +\n                          \"Toggle\"\n                        }\n                        className=\"name\"\n                      >\n                        {pitcher.person.fullName}\n                      </label>\n                      <input\n                        type=\"radio\"\n                        id={\n                          pitcher.person.firstName +\n                          pitcher.person.lastName +\n                          \"Toggle\"\n                        }\n                        name=\"player__name\"\n                        onChange={e => this.onChange(e, pitcher)}\n                      />\n                    </div>\n                    <RosterStats playerType=\"pitcher\" player={pitcher} />\n                  </li>\n                );\n              })}\n            </form>\n          </ul>\n          <h3 className=\"tableTitle__batters\">Batters</h3>\n          <ul className=\"batter__headings\">\n            <li className=\"year\">Year</li>\n            <li className=\"gamesPlayed\">GP</li>\n            <li className=\"plateAppearances\">PA</li>\n            <li className=\"atBats\">AB</li>\n            <li className=\"runs\">R</li>\n            <li className=\"hits\">H</li>\n            <li className=\"doubles\">2B</li>\n            <li className=\"triples\">3B</li>\n            <li className=\"homeRuns\">HR</li>\n            <li className=\"rbi\">RBI</li>\n            <li className=\"stolenBases\">SB</li>\n            <li className=\"caughtStealing\">CS</li>\n            <li className=\"stolenBasePercentage\">SB%</li>\n            <li className=\"baseOnBalls\">BB</li>\n            <li className=\"strikeOuts\">SO</li>\n            <li className=\"airOuts\">AO</li>\n            <li className=\"groundOuts\">GO</li>\n            <li className=\"avg\">BA</li>\n            <li className=\"babip\">BABIP</li>\n            <li className=\"obp\">OBP</li>\n            <li className=\"slg\">SLG</li>\n            <li className=\"groundIntoDoublePlay\">GIDP</li>\n            <li className=\"sacBunts\">SH</li>\n            <li className=\"sacFlies\">SF</li>\n          </ul>\n          <ul className=\"batters\">\n            {batters.map((batter: any) => {\n              return (\n                <li\n                  className=\"player\"\n                  key={batter.parentTeamId + \"_\" + batter.jerseyNumber}\n                >\n                  <div className=\"player__name\">\n                    <p className=\"jersey\">{batter.jerseyNumber}</p>\n                    <label\n                      htmlFor={\n                        batter.person.firstName +\n                        batter.person.lastName +\n                        \"Toggle\"\n                      }\n                      className=\"name\"\n                    >\n                      {batter.person.fullName}\n                    </label>\n                    <input\n                      type=\"radio\"\n                      id={\n                        batter.person.firstName +\n                        batter.person.lastName +\n                        \"Toggle\"\n                      }\n                      name=\"player__name\"\n                      onChange={e => this.onChange(e, batter)}\n                    />\n                  </div>\n                  <RosterStats playerType=\"batter\" player={batter} />\n                </li>\n              );\n            })}\n          </ul>\n          <Player\n            player={this.state.focusPlayer}\n            show={this.state.show}\n            close={this.closeOnClick}\n          />\n        </section>\n      );\n    } else {\n      return <div>Fetching Roster Data...</div>;\n    }\n  }\n}\n\nexport default Roster;\n","import React from \"react\";\n\nimport { fetchTeam } from \"../../Actions/fetchActions\";\n\nimport Roster from \"./Roster\";\n\nconst { connect } = require(\"react-redux\");\n@connect((store: any) => {\n  return {\n    team: store.fetch.payload.teams\n  };\n})\nclass Team extends React.Component<any> {\n  componentDidMount() {\n    this.props.dispatch(fetchTeam(this.props.match.params.teamid));\n  }\n\n  render() {\n    if (this.props.team) {\n      const teamData = this.props.team[0];\n      return (\n        <section className=\"team\">\n          <div className=\"team__info\">\n            <h2 className=\"team__name\">{teamData.name}</h2>\n            <div className=\"team__logo\">\n              <img\n                src={\n                  \"https://www.mlbstatic.com/team-logos/\" +\n                  this.props.match.params.teamid +\n                  \".svg\"\n                }\n                alt=\"\"\n              />\n            </div>\n            <div className=\"team__park\">\n              <img\n                src={\n                  \"https://prod-gameday.mlbstatic.com/responsive-gameday-assets/1.2.0/images/fields/\" +\n                  teamData.venue.id +\n                  \".svg\"\n                }\n                alt=\"\"\n              />\n            </div>\n          </div>\n          <Roster teamid={this.props.match.params.teamid} />\n        </section>\n      );\n    } else {\n      return <div>Fetching Team Info...</div>;\n    }\n  }\n}\n\nexport default Team;\n","import React from \"react\";\n\nconst Splits: React.FC<any> = (props: any) => {\n  const stats = props.stats[0];\n  switch (props.statType) {\n    case \"hitting\":\n      return stats.splits.map((split: any) => {\n        return (\n          <ul\n            key={split.season + \"hitting\"}\n            className={split.season + \"stats player__stats--year\"}\n          >\n            <li className=\"year\">{split.season}</li>\n            <li className=\"gamesPlayed\">{split.stat.gamesPlayed}</li>\n            <li className=\"plateAppearances\">{split.stat.plateAppearances}</li>\n            <li className=\"atBats\">{split.stat.atBats}</li>\n            <li className=\"runs\">{split.stat.runs}</li>\n            <li className=\"hits\">{split.stat.hits}</li>\n            <li className=\"doubles\">{split.stat.doubles}</li>\n            <li className=\"triples\">{split.stat.triples}</li>\n            <li className=\"homeRuns\">{split.stat.homeRuns}</li>\n            <li className=\"rbi\">{split.stat.rbi}</li>\n            <li className=\"stolenBases\">{split.stat.stolenBases}</li>\n            <li className=\"caughtStealing\">{split.stat.caughtStealing}</li>\n            <li className=\"stolenBasePercentage\">{split.stat.gamesPlayed}</li>\n            <li className=\"baseOnBalls\">{split.stat.baseOnBalls}</li>\n            <li className=\"strikeOuts\">{split.stat.strikeOuts}</li>\n            <li className=\"airOuts\">{split.stat.airOuts}</li>\n            <li className=\"groundOuts\">{split.stat.groundOuts}</li>\n            <li className=\"avg\">{split.stat.avg}</li>\n            <li className=\"babip\">{split.stat.babip}</li>\n            <li className=\"obp\">{split.stat.obp}</li>\n            <li className=\"slg\">{split.stat.slg}</li>\n            <li className=\"groundIntoDoublePlay\">\n              {split.stat.groundIntoDoublePlay}\n            </li>\n            <li className=\"sacBunts\">{split.stat.sacBunts}</li>\n            <li className=\"sacFlies\">{split.stat.sacFlies}</li>\n          </ul>\n        );\n      });\n    case \"pitching\":\n      return stats.splits.map((split: any) => {\n        return (\n          <ul\n            key={split.season + \"pitching\"}\n            className={split.season + \"stats player__stats--year\"}\n          >\n            <li className=\"year\">{split.season}</li>\n            <li className=\"wins\">{split.stat.wins}</li>\n            <li className=\"losses\">{split.stat.losses}</li>\n            <li className=\"winPercentage\">{split.stat.winPercentage}</li>\n            <li className=\"era\">{split.stat.era}</li>\n            <li className=\"gamesPitched\">{split.stat.gamesPitched}</li>\n            <li className=\"gamesStarted\">{split.stat.gamesStarted}</li>\n            <li className=\"numberOfPitches\">{split.stat.numberOfPitches}</li>\n            <li className=\"inningsPitched\">{split.stat.inningsPitched}</li>\n            <li className=\"pitchesPerInning\">{split.stat.pitchesPerInning}</li>\n            <li className=\"strikePercentage\">{split.stat.strikePercentage}</li>\n            <li className=\"hits\">{split.stat.hits}</li>\n            <li className=\"runs\">{split.stat.runs}</li>\n            <li className=\"earnedRuns\">{split.stat.earnedRuns}</li>\n            <li className=\"homeRuns\">{split.stat.homeRuns}</li>\n            <li className=\"groundOuts\">{split.stat.groundOuts}</li>\n            <li className=\"airOuts\">{split.stat.airOuts}</li>\n            <li className=\"strikeOuts\">{split.stat.strikeOuts}</li>\n            <li className=\"baseOnBalls\">{split.stat.baseOnBalls}</li>\n            <li className=\"strikeoutWalkRatio\">\n              {split.stat.strikeoutWalkRatio}\n            </li>\n            <li className=\"wildPitches\">{split.stat.wildPitches}</li>\n            <li className=\"battersFaced\">{split.stat.battersFaced}</li>\n            <li className=\"saveOpportunities\">\n              {split.stat.saveOpportunities}\n            </li>\n            <li className=\"saves\">{split.stat.saves}</li>\n            <li className=\"holds\">{split.stat.holds}</li>\n            <li className=\"pickoffs\">{split.stat.pickoffs}</li>\n            <li className=\"whip\">{split.stat.whip}</li>\n            <li className=\"strikeoutsPer9Inn\">\n              {split.stat.strikeoutsPer9Inn}\n            </li>\n            <li className=\"walksPer9Inn\">{split.stat.walksPer9Inn}</li>\n            <li className=\"hitsPer9Inn\">{split.stat.hitsPer9Inn}</li>\n            <li className=\"runsScoredPer9\">{split.stat.runsScoredPer9}</li>\n            <li className=\"homeRunsPer9\">{split.stat.homeRunsPer9}</li>\n          </ul>\n        );\n      });\n    case \"fielding\":\n      return stats.splits.map((split: any) => {\n        return (\n          <ul\n            key={split.season + \"fielding\"}\n            className={split.season + \"stats player__stats--year\"}\n          >\n            <li className=\"year\">{split.season}</li>\n            <li className=\"games\">{split.stat.games}</li>\n            <li className=\"gamesStarted\">{split.stat.gamesStarted}</li>\n            <li className=\"innings\">{split.stat.innings}</li>\n            <li className=\"chances\">{split.stat.chances}</li>\n            <li className=\"putOuts\">{split.stat.putOuts}</li>\n            <li className=\"assists\">{split.stat.asssists}</li>\n            <li className=\"errors\">{split.stat.errors}</li>\n            <li className=\"doublePlays\">{split.stat.doublePlays}</li>\n            <li className=\"fielding\">{split.stat.fielding}</li>\n            <li className=\"rangeFactorPerGame\">\n              {split.stat.rangeFactorPerGame}\n            </li>\n          </ul>\n        );\n      });\n    default:\n      return <div>Fetching Statline ...</div>;\n  }\n};\n\nexport default Splits;\n","import React from \"react\";\nimport \"./styles/details.scss\";\n\nimport { fetchPlayerStats } from \"../../Actions/fetchActions\";\n\nimport Splits from \"./Splits\";\nimport Player from \"./Player\";\n\nconst { connect } = require(\"react-redux\");\n@connect((store: any) => {\n  return {\n    player: store.fetch.player\n  };\n})\nclass PlayerStats extends React.Component<any, any> {\n  componentDidMount() {\n    this.props.dispatch(fetchPlayerStats(this.props.match.params.playerid));\n  }\n\n  render() {\n    let stats = {\n      hitting: [] as string[],\n      pitching: [] as string[],\n      fielding: [] as string[]\n    };\n\n    if (this.props.player.people) {\n      const player = this.props.player.people[0];\n      const details = { person: player };\n      player.stats.map((stat: any) => {\n        switch (stat.group.displayName) {\n          case \"hitting\":\n            stats.hitting.push(stat);\n            break;\n          case \"pitching\":\n            stats.pitching.push(stat);\n            break;\n          case \"fielding\":\n            stats.fielding.push(stat);\n            break;\n          default:\n            break;\n        }\n        return true;\n      });\n      return (\n        <div className=\"detail\">\n          <Player player={details} />\n          <ul>\n            {stats.hitting.length ? (\n              <li key={player.id + \"hitting\"}>\n                <h3>Hitting</h3>\n                <ul className=\"batter__headings\">\n                  <li className=\"year\">Year</li>\n                  <li className=\"gamesPlayed\">GP</li>\n                  <li className=\"plateAppearances\">PA</li>\n                  <li className=\"atBats\">AB</li>\n                  <li className=\"runs\">R</li>\n                  <li className=\"hits\">H</li>\n                  <li className=\"doubles\">2B</li>\n                  <li className=\"triples\">3B</li>\n                  <li className=\"homeRuns\">HR</li>\n                  <li className=\"rbi\">RBI</li>\n                  <li className=\"stolenBases\">SB</li>\n                  <li className=\"caughtStealing\">CS</li>\n                  <li className=\"stolenBasePercentage\">SB%</li>\n                  <li className=\"baseOnBalls\">BB</li>\n                  <li className=\"strikeOuts\">SO</li>\n                  <li className=\"airOuts\">AO</li>\n                  <li className=\"groundOuts\">GO</li>\n                  <li className=\"avg\">AVG</li>\n                  <li className=\"babip\">BABIP</li>\n                  <li className=\"obp\">OBP</li>\n                  <li className=\"slg\">SLG</li>\n                  <li className=\"groundIntoDoublePlay\">GIDP</li>\n                  <li className=\"sacBunts\">SH</li>\n                  <li className=\"sacFlies\">SF</li>\n                </ul>\n                <Splits statType=\"hitting\" stats={stats.hitting} />\n              </li>\n            ) : null}\n            {stats.pitching.length ? (\n              <li key={player.id + \"pitching\"}>\n                <h3>Pitching</h3>\n                <ul className=\"pitcher__headings\">\n                  <li className=\"year\">Year</li>\n                  <li className=\"wins\">W</li>\n                  <li className=\"losses\">L</li>\n                  <li className=\"winPercentage\">W-L%</li>\n                  <li className=\"era\">ERA</li>\n                  <li className=\"gamesPitched\">GP</li>\n                  <li className=\"gamesStarted\">GS</li>\n                  <li className=\"numberOfPitches\">NP</li>\n                  <li className=\"inningsPitched\">IP</li>\n                  <li className=\"pitchesPerInning\">NP/IP</li>\n                  <li className=\"strikePercentage\">PC-ST</li>\n                  <li className=\"hits\">H</li>\n                  <li className=\"runs\">R</li>\n                  <li className=\"earnedRuns\">ER</li>\n                  <li className=\"homeRuns\">HR</li>\n                  <li className=\"groundOuts\">GO</li>\n                  <li className=\"airOuts\">AO</li>\n                  <li className=\"strikeOuts\">K</li>\n                  <li className=\"baseOnBalls\">BB</li>\n                  <li className=\"strikeoutWalkRatio\">K/BB</li>\n                  <li className=\"wildPitches\">WP</li>\n                  <li className=\"battersFaced\">BF</li>\n                  <li className=\"saveOpportunities\">SVO</li>\n                  <li className=\"saves\">SV</li>\n                  <li className=\"holds\">HLD</li>\n                  <li className=\"pickoffs\">PK</li>\n                  <li className=\"whip\">WHIP</li>\n                  <li className=\"strikeoutsPer9Inn\">K/9</li>\n                  <li className=\"walksPer9Inn\">BB/9</li>\n                  <li className=\"hitsPer9Inn\">H/9</li>\n                  <li className=\"runsScoredPer9\">R/9</li>\n                  <li className=\"homeRunsPer9\">HR/9</li>\n                </ul>\n                <Splits statType=\"pitching\" stats={stats.pitching} />\n              </li>\n            ) : null}\n            {stats.fielding.length ? (\n              <li key={player.id + \"fielding\"}>\n                <h3>Fielding</h3>\n                <ul className=\"fielder__headings\">\n                  <li className=\"year\">Year</li>\n                  <li className=\"games\">G</li>\n                  <li className=\"gamesStarted\">GS</li>\n                  <li className=\"innings\">INN</li>\n                  <li className=\"chances\">OPP</li>\n                  <li className=\"putOuts\">PO</li>\n                  <li className=\"assists\">A</li>\n                  <li className=\"errors\">E</li>\n                  <li className=\"doublePlays\">DP</li>\n                  <li className=\"fielding\">FPCT</li>\n                  <li className=\"rangeFactorPerGame\">RF</li>\n                </ul>\n                <Splits statType=\"fielding\" stats={stats.fielding} />\n              </li>\n            ) : null}\n          </ul>\n        </div>\n      );\n    } else {\n      return <div>Fetching Player's Statline ...</div>;\n    }\n  }\n}\n\nexport default PlayerStats;\n","import React from \"react\";\n\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport Header from \"./Components/Main/Header\";\nimport Footer from \"./Components/Main/Footer\";\nimport Main from \"./Components/Main/Main\";\nimport Team from \"./Components/Teams/Team\";\nimport PlayerStats from \"./Components/Players/PlayerStats\";\n\nconst App: React.FC<any> = () => {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Header />\n        <div className=\"wrapper\">\n          <Route exact path=\"/\" component={Main} />\n          <Route path=\"/team/:teamid\" component={Team} />\n          <Route path=\"/player/:playerid\" component={PlayerStats} />\n        </div>\n        <Footer />\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}